<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ctf on Robin Verton</title>
    <link>http://robinverton.de/ctf/</link>
    <description>Recent content in Ctf on Robin Verton</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>de-de</language>
    <lastBuildDate>Mon, 19 Jun 2017 13:15:12 +0200</lastBuildDate>
    
	<atom:link href="http://robinverton.de/ctf/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Google CTF 2017, joe, web</title>
      <link>http://robinverton.de/ctf/googlectf-2017-joe-web/</link>
      <pubDate>Mon, 19 Jun 2017 13:15:12 +0200</pubDate>
      
      <guid>http://robinverton.de/ctf/googlectf-2017-joe-web/</guid>
      <description>Joe, your intelligent conversation partner For the Joe challenge, you got access to a simple page which looked like a chat. Over a text box you were able to talk with Joe, an &amp;ldquo;intelligent&amp;rdquo; converation partner/bot.
Joe had a few functionalities:
 Print out Joe&amp;rsquo;s name Set a new name Some small talk stuff Report a bug to an admin  The challenge description already told us to steal the admin cookie, so the last functionality (report a bug) was a good guess how we can interact with the admin.</description>
    </item>
    
    <item>
      <title>ASIS CTF 2017, Tar Bomb, Web129</title>
      <link>http://robinverton.de/ctf/asisctf-2017-tar-bomb-web129/</link>
      <pubDate>Sun, 26 Mar 2017 13:15:12 +0200</pubDate>
      
      <guid>http://robinverton.de/ctf/asisctf-2017-tar-bomb-web129/</guid>
      <description>This was not a typical web challenge, apart from beeing accessible over the web. The aim was to successfully execute a tar command (and do something usefull with it). The returned code of executed tar command was then returned to the user. I always got a &amp;ldquo;tar returned 2&amp;rdquo;, meaning that the file I was trying to (un)tar was not found. Chars to travers or inject were all filtered.</description>
    </item>
    
    <item>
      <title>VolgaCTF, web200 (Share Point)</title>
      <link>http://robinverton.de/ctf/volgactf-web200-sharepoint/</link>
      <pubDate>Sun, 26 Mar 2017 13:15:12 +0200</pubDate>
      
      <guid>http://robinverton.de/ctf/volgactf-web200-sharepoint/</guid>
      <description>The only accessible page for Share Point was a login form. After fiddling with the login, I noticed that you were able to login with some basic credentials like admin1111:password or admin11111:password. In the member area we had three possibilities:
 Upload a file View Files Shared Files Logout  Firt I tried to upload some .php files, which did not work (only some extensions like .jpg or .txt were allowed).</description>
    </item>
    
    <item>
      <title>nullcon 2017, pwn200</title>
      <link>http://robinverton.de/ctf/nullcon17-pwn200/</link>
      <pubDate>Sun, 12 Feb 2017 13:48:18 +0200</pubDate>
      
      <guid>http://robinverton.de/ctf/nullcon17-pwn200/</guid>
      <description>Exploitation was straight forward by abusing a format string vulnerability to overwrite .got. The strchr was called immediately after the printf call with our passed string as an argument, so it was only needed to overwrite this with the address of system.
 </description>
    </item>
    
  </channel>
</rss>